// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.20.3
// source: grpc/chat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_JOIN    EventType = 0
	EventType_MESSAGE EventType = 1
	EventType_LEAVE   EventType = 2
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "JOIN",
		1: "MESSAGE",
		2: "LEAVE",
	}
	EventType_value = map[string]int32{
		"JOIN":    0,
		"MESSAGE": 1,
		"LEAVE":   2,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_chat_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_grpc_chat_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_grpc_chat_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_grpc_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_grpc_chat_proto_rawDescGZIP(), []int{0}
}

type JoinMsgLeave struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  // Unique client ID
	ClientName    string                 `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"` // Name client that is logging on message service
	Log           string                 `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`                                 // Log
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                    // Lamport timestamp
	Msg           string                 `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`                                 // Message to be sent through the message service
	JoinRequest   string                 `protobuf:"bytes,6,opt,name=join_request,json=joinRequest,proto3" json:"join_request,omitempty"`
	LeaveRequest  string                 `protobuf:"bytes,7,opt,name=leave_request,json=leaveRequest,proto3" json:"leave_request,omitempty"`
	Type          EventType              `protobuf:"varint,8,opt,name=type,proto3,enum=itu.chitchat.EventType" json:"type,omitempty"` // Either "JOIN", "MESSAGE", or "LEAVE"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinMsgLeave) Reset() {
	*x = JoinMsgLeave{}
	mi := &file_grpc_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinMsgLeave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMsgLeave) ProtoMessage() {}

func (x *JoinMsgLeave) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMsgLeave.ProtoReflect.Descriptor instead.
func (*JoinMsgLeave) Descriptor() ([]byte, []int) {
	return file_grpc_chat_proto_rawDescGZIP(), []int{1}
}

func (x *JoinMsgLeave) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JoinMsgLeave) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *JoinMsgLeave) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *JoinMsgLeave) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JoinMsgLeave) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *JoinMsgLeave) GetJoinRequest() string {
	if x != nil {
		return x.JoinRequest
	}
	return ""
}

func (x *JoinMsgLeave) GetLeaveRequest() string {
	if x != nil {
		return x.LeaveRequest
	}
	return ""
}

func (x *JoinMsgLeave) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_JOIN
}

type ServerMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      int32                  `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName    string                 `protobuf:"bytes,2,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	Log           string                 `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`                                // Log
	MsgStream     string                 `protobuf:"bytes,4,opt,name=msg_stream,json=msgStream,proto3" json:"msg_stream,omitempty"`   // Message content
	Type          EventType              `protobuf:"varint,5,opt,name=type,proto3,enum=itu.chitchat.EventType" json:"type,omitempty"` // Either "JOIN", "MESSAGE", or "LEAVE"
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_grpc_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_grpc_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ServerMessage) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *ServerMessage) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ServerMessage) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ServerMessage) GetMsgStream() string {
	if x != nil {
		return x.MsgStream
	}
	return ""
}

func (x *ServerMessage) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_JOIN
}

func (x *ServerMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_grpc_chat_proto protoreflect.FileDescriptor

const file_grpc_chat_proto_rawDesc = "" +
	"\n" +
	"\x0fgrpc/chat.proto\x12\fitu.chitchat\"\a\n" +
	"\x05Empty\"\xf6\x01\n" +
	"\fJoinMsgLeave\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vclient_name\x18\x02 \x01(\tR\n" +
	"clientName\x12\x10\n" +
	"\x03log\x18\x03 \x01(\tR\x03log\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x10\n" +
	"\x03msg\x18\x05 \x01(\tR\x03msg\x12!\n" +
	"\fjoin_request\x18\x06 \x01(\tR\vjoinRequest\x12#\n" +
	"\rleave_request\x18\a \x01(\tR\fleaveRequest\x12+\n" +
	"\x04type\x18\b \x01(\x0e2\x17.itu.chitchat.EventTypeR\x04type\"\xc9\x01\n" +
	"\rServerMessage\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\x05R\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x02 \x01(\tR\n" +
	"senderName\x12\x10\n" +
	"\x03log\x18\x03 \x01(\tR\x03log\x12\x1d\n" +
	"\n" +
	"msg_stream\x18\x04 \x01(\tR\tmsgStream\x12+\n" +
	"\x04type\x18\x05 \x01(\x0e2\x17.itu.chitchat.EventTypeR\x04type\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp*-\n" +
	"\tEventType\x12\b\n" +
	"\x04JOIN\x10\x00\x12\v\n" +
	"\aMESSAGE\x10\x01\x12\t\n" +
	"\x05LEAVE\x10\x022R\n" +
	"\vChatService\x12C\n" +
	"\x04Chat\x12\x1a.itu.chitchat.JoinMsgLeave\x1a\x1b.itu.chitchat.ServerMessage(\x010\x01B Z\x1eMandatory3_chitchat/grpc;protob\x06proto3"

var (
	file_grpc_chat_proto_rawDescOnce sync.Once
	file_grpc_chat_proto_rawDescData []byte
)

func file_grpc_chat_proto_rawDescGZIP() []byte {
	file_grpc_chat_proto_rawDescOnce.Do(func() {
		file_grpc_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grpc_chat_proto_rawDesc), len(file_grpc_chat_proto_rawDesc)))
	})
	return file_grpc_chat_proto_rawDescData
}

var file_grpc_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpc_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_grpc_chat_proto_goTypes = []any{
	(EventType)(0),        // 0: itu.chitchat.EventType
	(*Empty)(nil),         // 1: itu.chitchat.Empty
	(*JoinMsgLeave)(nil),  // 2: itu.chitchat.JoinMsgLeave
	(*ServerMessage)(nil), // 3: itu.chitchat.ServerMessage
}
var file_grpc_chat_proto_depIdxs = []int32{
	0, // 0: itu.chitchat.JoinMsgLeave.type:type_name -> itu.chitchat.EventType
	0, // 1: itu.chitchat.ServerMessage.type:type_name -> itu.chitchat.EventType
	2, // 2: itu.chitchat.ChatService.Chat:input_type -> itu.chitchat.JoinMsgLeave
	3, // 3: itu.chitchat.ChatService.Chat:output_type -> itu.chitchat.ServerMessage
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_grpc_chat_proto_init() }
func file_grpc_chat_proto_init() {
	if File_grpc_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grpc_chat_proto_rawDesc), len(file_grpc_chat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_chat_proto_goTypes,
		DependencyIndexes: file_grpc_chat_proto_depIdxs,
		EnumInfos:         file_grpc_chat_proto_enumTypes,
		MessageInfos:      file_grpc_chat_proto_msgTypes,
	}.Build()
	File_grpc_chat_proto = out.File
	file_grpc_chat_proto_goTypes = nil
	file_grpc_chat_proto_depIdxs = nil
}
